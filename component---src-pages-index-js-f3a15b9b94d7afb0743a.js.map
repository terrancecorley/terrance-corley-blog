{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref4","data","console","log","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_5__","charSet","rel","href","_components_layout__WEBPACK_IMPORTED_MODULE_4__","css","_ref","allMarkdownRemark","totalCount","edges","map","_ref5","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","_ref2","rhythm","frontmatter","title","_ref3","date","excerpt","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","__webpack_require__","d","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","gatsby__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","_public_static_d_2729156960_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-f3a15b9b94d7afb0743a.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport { Helmet } from 'react-helmet'\n\nexport default ({ data }) => {\n  console.log(data)\n  return (\n    <Fragment>\n        <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Yo YO Yo</title>\n        <link rel=\"canonical\" href=\"http://mysite.com/example\" />\n        </Helmet>\n        <Layout>\n            <div>\n                <h1\n                css={css`\n                    display: inline-block;\n                    border-bottom: 1px solid;\n                `}\n                >\n                Amazing Pandas Eating Things\n                </h1>\n                <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n                {data.allMarkdownRemark.edges.map(({ node }) => (\n                <div key={node.id}>\n                    <Link\n                    to={node.fields.slug}\n                    css={css`\n                        text-decoration: none;\n                        color: inherit;\n                    `}\n                    >\n                        <h3\n                        css={css`\n                            margin-bottom: ${rhythm(1 / 4)};\n                        `}\n                        >\n                        {node.frontmatter.title}{\" \"}\n                        <span\n                            css={css`\n                            color: #bbb;\n                            `}\n                        >\n                            â€” {node.frontmatter.date}\n                        </span>\n                        </h3>\n                        <p>{node.excerpt}</p>\n                    </Link>\n                </div>\n                ))}\n            </div>\n        </Layout>\n    </Fragment>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: {\n        fields: [frontmatter___date],\n        order: DESC\n    }){\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n              slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { Link, StaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `\n        }\n\n    render={data => (\n        <div\n            css={css`\n                margin: 0 auto;\n                max-width: 700px;\n                padding: ${rhythm(2)};\n                padding-top: ${rhythm(1.5)};\n            `}\n            >\n            <Link to={`/`}>\n                <h3\n                css={css`\n                    margin-bottom: ${rhythm(2)};\n                    display: inline-block;\n                    font-style: normal;\n                `}\n                >\n                {data.site.siteMetadata.title}\n                </h3>\n            </Link>\n            <Link\n                to={`/about/`}\n                css={css`\n                float: right;\n                `}\n            >\n                About\n            </Link>\n            {children}\n            </div>\n        )}\n    />\n)\n    ","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}