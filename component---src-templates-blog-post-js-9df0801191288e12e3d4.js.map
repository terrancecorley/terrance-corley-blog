{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref","post","data","markdownRemark","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","frontmatter","title","dangerouslySetInnerHTML","__html","html","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","__webpack_require__","d","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","_ref2","gatsby__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_3__","charSet","rel","href","css","to","site","siteMetadata","_public_static_d_2729156960_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"gKAIeA,EAAA,iBAAAC,GAAc,IACrBC,EADqBD,EAAXE,KACEC,eAElB,OACEC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,WACIA,OAAAC,EAAA,EAAAD,CAAA,UAAKH,EAAKM,YAAYC,OACtBJ,OAAAC,EAAA,EAAAD,CAAA,OAAKK,wBAAyB,CAAEC,OAAQT,EAAKU,WAMhD,IAAMC,EAAK,kCCjBlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,qnBCY/C,IAAMK,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvBlB,OAAAC,EAAA,EAAAD,CAACc,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAMpB,MACLsB,EAAgBF,EAAMV,QAAUY,EAAgBF,EAAMV,OAAOV,MAEtDoB,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAMpB,KAAOoB,EAAMpB,KAAKA,KAAOsB,EAAgBF,EAAMV,OAAOV,MAGvDE,OAAAC,EAAA,EAAAD,CAAA,uCAaf,SAASuB,IACP,MAAM,IAAIC,MACR,gVATJP,EAAYQ,UAAY,CACtB3B,KAAM4B,IAAUC,OAChBnB,MAAOkB,IAAUE,OAAOC,WACxBR,OAAQK,IAAUI,KAClBR,SAAUI,IAAUI,wCCnCtBC,EAAAC,EAAArC,EAAA,sBAAAsC,IAAA,IAAAC,EAAAH,EAAA,KAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAAK,EAAAC,GAGME,EAAa,IAAIC,IAAWC,KAGrBR,EAASM,EAAWN,wICClBtC,EAAA,WAAA+C,GAAA,IAAGpB,EAAHoB,EAAGpB,SAAH,OACXtB,OAAAC,EAAA,EAAAD,CAAC2C,EAAA,YAAD,CACInC,MAAK,aAWTa,OAAQ,SAAAvB,GAAI,OACRE,OAAAC,EAAA,EAAAD,CAAC4C,EAAA,SAAD,KACI5C,OAAAC,EAAA,EAAAD,CAAC6C,EAAA,OAAD,KACI7C,OAAAC,EAAA,EAAAD,CAAA,QAAM8C,QAAQ,UACd9C,OAAAC,EAAA,EAAAD,CAAA,uCACAA,OAAAC,EAAA,EAAAD,CAAA,QAAM+C,IAAI,YAAYC,KAAK,+BAE/BhD,OAAAC,EAAA,EAAAD,CAAA,OACIiD,IAAKA,YAAF,yCAGYhB,YAAO,GAHnB,gBAIgBA,YAAO,KAJvB,MAOHjC,OAAAC,EAAA,EAAAD,CAAC2C,EAAA,KAAD,CAAMO,GAAE,KACJlD,OAAAC,EAAA,EAAAD,CAAA,MACAiD,IAAKA,YAAF,iBACkBhB,YAAO,GADzB,6CAMFnC,EAAKqD,KAAKC,aAAahD,QAG5BJ,OAAAC,EAAA,EAAAD,CAAC2C,EAAA,KAAD,CACIO,GAAE,UACFD,IAAGrD,GAFP,SAQC0B,KA9CbxB,KAAAuD,gMCFEC,EAAmB,SAAA1D,GAAkB,IAAf2D,EAAe3D,EAAf2D,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAO5C,IAAM6C,cAAcC,IAApB7D,OAAA8D,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiB7B,UAAY,CAC3B8B,SAAU7B,IAAUsC,MAAM,CACxBL,SAAUjC,IAAUE,OAAOC,aAC1BA,YAGUyB","file":"component---src-templates-blog-post-js-9df0801191288e12e3d4.js","sourcesContent":["import React from \"react\"\nimport { graphql } from 'gatsby'\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n\n  return (\n    <Layout>\n      <div>\n          <h1>{post.frontmatter.title}</h1>\n          <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n    query($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            html\n            frontmatter {\n                title\n            }\n        }\n    }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React, { Fragment } from \"react\"\nimport { Helmet } from 'react-helmet'\nimport { css } from \"@emotion/core\"\nimport { Link, StaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `\n        }\n\n    render={data => (\n        <Fragment>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Blog | Terrance Corley</title>\n                <link rel=\"canonical\" href=\"http://mysite.com/example\" />\n            </Helmet>\n            <div\n                css={css`\n                    margin: 0 auto;\n                    max-width: 700px;\n                    padding: ${rhythm(2)};\n                    padding-top: ${rhythm(1.5)};\n                `}\n                >\n                <Link to={`/`}>\n                    <h3\n                    css={css`\n                        margin-bottom: ${rhythm(2)};\n                        display: inline-block;\n                        font-style: normal;\n                    `}\n                    >\n                    {data.site.siteMetadata.title}\n                    </h3>\n                </Link>\n                <Link\n                    to={`/about/`}\n                    css={css`\n                    float: right;\n                    `}\n                >\n                    About\n                </Link>\n                {children}\n                </div>\n        </Fragment>\n    )}\n    />\n)\n    ","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}