{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref3","post","data","markdownRemark","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","name","content","frontmatter","css","_ref","_ref2","title","dangerouslySetInnerHTML","__html","html","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","useStaticQuery","useContext","context","Error","graphql","propTypes","PropTypes","object","string","isRequired","func","__webpack_require__","d","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","gatsby__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_3__","charSet","rel","href","to","site","siteMetadata","style","float","_public_static_d_2729156960_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-templates-blog-post-js-d7ba535ee6ccfc05f8f0.js","sourcesContent":["import React from \"react\"\nimport { graphql } from 'gatsby'\nimport { css } from \"@emotion/core\"\nimport { Helmet } from 'react-helmet'\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n    const post = data.markdownRemark;\n\n    return (\n        <Layout>\n            <Helmet>\n                <meta name=\"description\" content={post.frontmatter.content} />\n            </Helmet>\n            <div\n            css={css`\n                background-color: #fdfdfd;\n\n                a {\n                    color: #2fa7bb;\n                    transition: color 0.2s ease-out;\n\n                    :hover,\n                    :focus {\n                        color: #227280;\n                    }\n                }\n            `}\n            >\n                <h1\n                css={css`\n                    color: #2fa7bb !important;\n                `}\n                >\n                {post.frontmatter.title}\n                </h1>\n                <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            </div>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            html\n            frontmatter {\n                title,\n                content\n            }\n        }\n    }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React, { Fragment } from \"react\"\nimport { Helmet } from 'react-helmet'\nimport { css } from \"@emotion/core\"\nimport { Link, StaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `\n        }\n\n    render={data => (\n        <Fragment>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Blog | Terrance Corley</title>\n                <link rel=\"canonical\" href=\"http://mysite.com/example\" />\n                <link href=\"https://fonts.googleapis.com/css?family=Nunito:800|Open+Sans:400,400i|Pacifico\" rel=\"stylesheet\" />\n            </Helmet>\n            <header\n                css={css`\n                    background-color: #5c6063;\n                    flex-flow: row wrap;\n                    margin-bottom: 2.5em;\n\n                    @media (max-width: 32em) {\n                        height: 190px;\n                        margin-bottom: 2em;\n                    }\n\n                    h3 {\n                       color: #fdfdfd;\n                       font-family: 'Pacifico', sans-serif;\n                       font-size: 1.5em;\n                    }\n\n                    a:nth-of-type(2) {\n                        font-family: 'Nunito', sans-serif;\n                        font-size: 1.4em;\n                        color: #bdc3c7;\n                        transition: color 0.2s ease-out;\n                        text-decoration: none;\n\n                        :hover {\n                            color: #fdfdfd;\n                        }\n                    }\n                `}\n            >\n                <div\n                    css={css`\n                    margin: 0 auto;\n                    margin-bottom: 1.5em;\n                    max-width: 725px;\n                    padding: ${rhythm(2)};\n                    padding-top: ${rhythm(1.5)};\n                    padding-bottom: 0;\n                `}\n                >\n                    <Link to={`/`}>\n                        <h3\n                        css={css`\n                            margin-bottom: ${rhythm(2)};\n                            display: inline-block;\n                            font-style: normal;\n                        `}\n                        >\n                        {data.site.siteMetadata.title}\n                        </h3>\n                    </Link>\n                    <a\n                        href=\"https://terrancecorley.com\"\n                        rel=\"noreferrer noopener\"\n                        style={{\n                            float: 'right'\n                        }}\n                    >\n                        Portfolio\n                    </a>\n                </div>\n            </header>\n            <div\n                css={css`\n                    margin: 0 auto;\n                    max-width: 725px;\n                    padding: ${rhythm(2)};\n                    padding-top: 0;\n\n                    h1, h4 {\n                        color: #5c6063;\n                        font-family: 'Nunito', sans-serif;\n                    }\n                    \n                    h3 {\n                        font-family: 'Nunito', sans-serif;\n                        color: #2fa7bb;\n                    }\n\n                    h3 span {\n                        color: #5c6063;\n                    }\n                `}\n                >\n                {children}\n            </div>\n        </Fragment>\n    )}\n    />\n)\n    ","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}